// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model MarketCategory {
  id          String       @id @default(dbgenerated("gen_random_uuid()"))
  name        String       @unique
  description String
  MarketItem  MarketItem[]

  @@map("market_category")
}

model MarketBrand {
  id          String @id @default(dbgenerated("gen_random_uuid()"))
  name        String @unique
  description String

  @@map("market_brand")
}

model MarketBusiness {
  id        String      @id @default(dbgenerated("gen_random_uuid()"))
  name      String      @unique
  score     Int
  MarketCar MarketCar[]

  @@map("market_business")
}

model MarketItem {
  id          String  @id @default(dbgenerated("gen_random_uuid()"))
  name        String  @unique
  description String
  unitary     Boolean

  category           MarketCategory       @relation(fields: [category_id], references: [id])
  category_id        String
  MarketItemPlanning MarketItemPlanning[]

  @@map("market_item")
}

model MarketPlanning {
  id            String   @id @default(dbgenerated("gen_random_uuid()"))
  created_date  DateTime @default(now())
  amount_target Float 

  MarketItemPlanning MarketItemPlanning[]
  MarketCar          MarketCar?

  @@map("market_planning")
}

model MarketItemPlanning {
  id       String  @id @default(dbgenerated("gen_random_uuid()"))
  quantity Int     @default(1)
  required Boolean

  planning_id   String
  planning      MarketPlanning  @relation(fields: [planning_id], references: [id])
  item_id       String
  item          MarketItem      @relation(fields: [item_id], references: [id])
  MarketCarItem MarketCarItem[]

  @@map("market_item_planning")
}

model MarketCar {
  id              String   @id @default(dbgenerated("gen_random_uuid()"))
  created_date    DateTime @default(now())
  withdrawals     Int      @default(0)
  not_founds      Int      @default(0)
  confirmed_value Float    @default(0)
  estimated_value Float    @default(0)

  planning_id String         @unique
  planning    MarketPlanning @relation(fields: [planning_id], references: [id])

  business_id   String
  business      MarketBusiness  @relation(fields: [business_id], references: [id])
  MarketCarItem MarketCarItem[]

  @@map("market_car")
}

model MarketCarItem {
  id       String             @id @default(dbgenerated("gen_random_uuid()"))
  quantity Int                @default(1)
  price    Float              @default(0)
  car_id   String
  car      MarketCar          @relation(fields: [car_id], references: [id])
  item_id  String
  item     MarketItemPlanning @relation(fields: [item_id], references: [id])

  @@map("market_item_car")
}
